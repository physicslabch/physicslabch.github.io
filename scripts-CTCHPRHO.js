var deviceName="M5-01",bleService="4fafc201-1fb5-459e-8fcc-c5c9c331914b",bleCharacteristic="beb5483e-36e1-4688-b7f5-ea07361b26a8",bluetoothDeviceDetected,gattCharacteristic;function isWebBLEAvailable(){return navigator.bluetooth?!0:(console.log("Web bluetooth is not available!"),!1)}function getDeviceInfo(){let t={optionalServices:["4fafc201-1fb5-459e-8fcc-c5c9c331914b"],filters:[{name:deviceName}]};return console.log("Requesting BLE device info..."),navigator.bluetooth.requestDevice(t).then(e=>{bluetoothDeviceDetected=e,console.log(bluetoothDeviceDetected)}).catch(e=>{console.log("Request device error: "+e)})}var initTimeJS;function connectDeviceJS(t,e,o){return(bluetoothDeviceDetected?Promise.resolve():getDeviceInfo()).then(()=>connectGATT(t,e,o)).then(()=>gattCharacteristic).catch(n=>{console.log("Waiting to start reading: "+n)})}function connectGATT(t,e,o){return bluetoothDeviceDetected.gatt.connected&&gattCharacteristic?Promise.resolve():bluetoothDeviceDetected.gatt.connect().then(n=>(console.log("Getting GATT service..."),n.getPrimaryService(bleService))).then(n=>(console.log("Getting GATT Characteristics..."),n.getCharacteristic(bleCharacteristic))).then(n=>{gattCharacteristic=n,gattCharacteristic.addEventListener("characteristicvaluechanged",c=>{tmpFloats=[];for(let r=0;r<c.target.value.byteLength/4;r++){tmpUint8Array=[];for(let a=0;a<4;a++)tmpUint8Array.push(c.target.value.getUint8(a+r*4));const{buffer:i}=new Uint8Array(tmpUint8Array),l=new DataView(i);tmpFloats.push(l.getFloat32(0,!0))}t(tmpFloats,e,initTimeJS,o)})})}function startStreamingJS(t){initTimeJS=t,gattCharacteristic.startNotifications().then(e=>{console.log("Start reading...")}).catch(e=>{console.log("[ERROR] Start: "+e)})}function stopStreamingJS(){gattCharacteristic.stopNotifications().then(t=>{console.log("Stop reading...")}).catch(t=>{console.log("[ERROR] Stop: "+t)})}function callbackJS(t){}
